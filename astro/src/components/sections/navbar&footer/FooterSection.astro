---
// Import the necessary dependencies
import FooterSocialLink from '@components/ui/links/FooterSocialLink.astro';
import EmailFooterInput from '@components/ui/forms/input/EmailFooterInput.astro';
import enStrings from '@utils/navigation';
import Icon from '@components/ui/icons/Icon.astro';
import BrandLogo from '@components/BrandLogo.astro';
import { SITE } from '@data/constants';

// Define TypeScript interfaces
interface Link {
  name: string;
  url: string;
  target?: '_blank' | '_self';
  rel?: string;
}

interface FooterSection {
  section: string;
  links: Link[];
}

// Use the English strings with type assertion
const strings = enStrings as {
  footerLinks: FooterSection[];
  socialLinks: Record<string, string>;
};

// Define the variables that will be used in this component
const sectionThreeTitle: string = 'Stay connected';
const sectionThreeContent: string =
  'Get the latest Amina updates and server management tips.';
const crafted: string = 'Crafted with ❤️ by';

// Helper function to determine if a URL is external
const isExternalUrl = (url: string): boolean => {
  return url.startsWith('http') || url.startsWith('https');
};

// Helper function to get link attributes
const getLinkAttributes = (link: Link) => {
  const isExternal = isExternalUrl(link.url);
  return {
    target: link.target || (isExternal ? '_blank' : '_self'),
    rel: link.rel || (isExternal ? 'noopener noreferrer' : undefined),
    'data-discord-auth': link.url.includes('discord.com') ? '' : undefined,
  };
};
---

<footer class="w-full bg-cyan-100/40 dark:bg-slate-800/80">
  <div
    class="mx-auto w-full max-w-[85rem] px-4 py-10 sm:px-6 lg:px-16 lg:pt-20 2xl:max-w-screen-2xl"
  >
    <div class="grid grid-cols-2 gap-6 md:grid-cols-4 lg:grid-cols-5">
      <div class="col-span-full lg:col-span-1">
        <BrandLogo class="h-auto w-32" />
        <p class="text-gray-600 dark:text-gray-400 max-w-md">
          Your intelligent Discord companion, bringing communities together.
        </p>
      </div>

      {
        strings.footerLinks.map((section) => (
          <div class="col-span-1">
            <h3 class="font-bold text-neutral-800 dark:text-neutral-200">
              {section.section}
            </h3>
            <ul class="mt-3 grid space-y-3">
              {section.links.map((link, index) => {
                const attrs = getLinkAttributes(link);
                return (
                  <li>
                    <a
                      href={link.url}
                      {...attrs}
                      class="inline-flex gap-x-2 rounded-lg text-neutral-600 outline-none ring-zinc-500 transition duration-300 hover:text-neutral-500 focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-300 dark:focus:outline-none"
                    >
                      {link.name}
                    </a>
                    {section.section === 'Features' && index === 2 ? (
                      <span class="ms-1 inline rounded-lg bg-pink-500 px-2 py-1 text-xs font-bold text-neutral-50">
                        New!
                      </span>
                    ) : null}
                  </li>
                );
              })}
            </ul>
          </div>
        ))
      }

      <div class="col-span-2">
        <h3 class="font-bold text-neutral-800 dark:text-neutral-200">
          {sectionThreeTitle}
        </h3>

        <form>
          <EmailFooterInput />
          <p class="mt-3 text-sm text-neutral-600 dark:text-neutral-400">
            {sectionThreeContent}
          </p>
        </form>
      </div>
    </div>

    <div
      class="mt-9 grid gap-y-2 sm:mt-12 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
    >
      <div class="flex items-center justify-between">
        <p class="text-sm text-neutral-600 dark:text-neutral-400">
          © <span id="current-year"></span>
          {SITE.title}. {crafted}
          <a
            class="rounded-lg font-medium underline underline-offset-2 outline-none ring-zinc-500 transition duration-300 hover:text-neutral-700 hover:decoration-dashed focus:outline-none focus-visible:ring dark:ring-zinc-200 dark:hover:text-neutral-300"
            href="https://vikshan.tech"
            target="_blank"
            rel="noopener noreferrer"
          >
            vikshan
          </a>.
        </p>
      </div>

      <div>
        {
          Object.entries(strings.socialLinks).map(([platform, url]) => (
            <FooterSocialLink
              url={url}
              {...getLinkAttributes({ url, name: platform })}
            >
              <Icon name={`${platform}Footer`} />
            </FooterSocialLink>
          ))
        }
      </div>
    </div>
  </div>
</footer>

<script>
  interface DiscordAuthButton extends HTMLAnchorElement {
    href: string;
  }

  function handleDiscordAuth(button: DiscordAuthButton) {
    const width = 500;
    const height = 800;
    const left = (window.screen.width - width) / 2;
    const top = (window.screen.height - height) / 2;

    const popup = window.open(
      button.href,
      'discordAuthPopup',
      `width=${width},height=${height},left=${left},top=${top},scrollbars=yes`
    );

    if (popup) popup.focus();

    const checkPopup = setInterval(() => {
      try {
        if (popup && popup.closed) {
          clearInterval(checkPopup);
          window.dispatchEvent(new CustomEvent('discordAuthSuccess'));
        }
      } catch (e) {
        // Handle cross-origin errors silently
      }
    }, 500);
  }

  // Attach event listeners to Discord auth buttons
  document
    .querySelectorAll<DiscordAuthButton>('a[data-discord-auth]')
    .forEach((button) => {
      button.addEventListener('click', (e: MouseEvent) => {
        e.preventDefault();
        handleDiscordAuth(button);
      });
    });

  // Set current year
  const year = new Date().getFullYear();
  const element = document.getElementById('current-year');
  if (element) element.innerText = year.toString();

  // Handle successful Discord authorization
  window.addEventListener('discordAuthSuccess', () => {
    console.log('Discord authorization completed');
  });
</script>
